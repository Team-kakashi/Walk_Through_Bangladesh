{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { SafeAreaViewContainer, Subtitle, TouchableOpacityPicker } from \"./common.style\";\nimport { ModalPicker } from \"./modalPicker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar selectingDropDown;\nvar Title;\nexport var ItemChoise;\nexport var ModalView = function ModalView(props) {\n  Title = props.Title;\n  selectingDropDown = props.Array;\n\n  var _useState = useState(Title),\n      _useState2 = _slicedToArray(_useState, 2),\n      chooseData = _useState2[0],\n      setChooseData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isModeVisible = _useState4[0],\n      setisModeVisible = _useState4[1];\n\n  var changeModalVisibility = function changeModalVisibility(bool) {\n    setisModeVisible(bool);\n  };\n\n  var setData = function setData(selectingDropDown) {\n    props.PickerValue(selectingDropDown);\n    setChooseData(selectingDropDown);\n  };\n\n  return _jsxs(SafeAreaViewContainer, {\n    children: [_jsx(TouchableOpacityPicker, {\n      onPress: function onPress() {\n        changeModalVisibility(true);\n      },\n      children: _jsx(Subtitle, {\n        children: chooseData\n      })\n    }), _jsx(Modal, {\n      transparent: true,\n      animationType: \"fade\",\n      visible: isModeVisible,\n      nRequestClose: function nRequestClose() {\n        return changeModalVisibility(false);\n      },\n      children: _jsx(ModalPicker, {\n        changeModalVisibility: changeModalVisibility,\n        setData: setData,\n        array: selectingDropDown\n      })\n    })]\n  });\n};","map":{"version":3,"sources":["E:/Development/Walk_Through_Bangladesh/src/components/modalView.view.js"],"names":["React","useState","SafeAreaViewContainer","Subtitle","TouchableOpacityPicker","ModalPicker","selectingDropDown","Title","ItemChoise","ModalView","props","Array","chooseData","setChooseData","isModeVisible","setisModeVisible","changeModalVisibility","bool","setData","PickerValue"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SACEC,qBADF,EAEEC,QAFF,EAGEC,sBAHF;AAKA,SAASC,WAAT;;;AAEA,IAAIC,iBAAJ;AACA,IAAIC,KAAJ;AACA,OAAO,IAAIC,UAAJ;AACP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAElCH,EAAAA,KAAK,GAAGG,KAAK,CAACH,KAAd;AACAD,EAAAA,iBAAiB,GAAGI,KAAK,CAACC,KAA1B;;AAYA,kBAAoCV,QAAQ,CAC1CM,KAD0C,CAA5C;AAAA;AAAA,MAAOK,UAAP;AAAA,MAAmBC,aAAnB;;AAIA,mBAA0CZ,QAAQ,CAAC,KAAD,CAAlD;AAAA;AAAA,MAAOa,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,IAAD,EAAU;AACtCF,IAAAA,gBAAgB,CAACE,IAAD,CAAhB;AACD,GAFD;;AAIA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACZ,iBAAD,EAAuB;AAErCI,IAAAA,KAAK,CAACS,WAAN,CAAkBb,iBAAlB;AACAO,IAAAA,aAAa,CAACP,iBAAD,CAAb;AACD,GAJD;;AAMA,SACE,MAAC,qBAAD;AAAA,eACE,KAAC,sBAAD;AACE,MAAA,OAAO,EAAE,mBAAK;AAAEU,QAAAA,qBAAqB,CAAC,IAAD,CAArB;AAEf,OAHH;AAAA,gBAKE,KAAC,QAAD;AAAA,kBAAWJ;AAAX;AALF,MADF,EAQE,KAAC,KAAD;AACE,MAAA,WAAW,EAAE,IADf;AAEE,MAAA,aAAa,EAAC,MAFhB;AAGE,MAAA,OAAO,EAAEE,aAHX;AAIE,MAAA,aAAa,EAAE;AAAA,eAAME,qBAAqB,CAAC,KAAD,CAA3B;AAAA,OAJjB;AAAA,gBAME,KAAC,WAAD;AACE,QAAA,qBAAqB,EAAEA,qBADzB;AAEE,QAAA,OAAO,EAAEE,OAFX;AAGE,QAAA,KAAK,EAAEZ;AAHT;AANF,MARF;AAAA,IADF;AAuBD,CArDM","sourcesContent":["/** @format */\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Modal } from \"react-native\";\r\nimport {\r\n  SafeAreaViewContainer,\r\n  Subtitle,\r\n  TouchableOpacityPicker,\r\n} from \"./common.style\";\r\nimport { ModalPicker } from \"./modalPicker\";\r\n\r\nvar selectingDropDown;\r\nvar Title; \r\nexport var ItemChoise;\r\nexport const ModalView = (props) => {\r\n\r\n  Title = props.Title;\r\n  selectingDropDown = props.Array;\r\n  /*if(props.AC_option!=undefined){\r\n    selectingDropDown = props.AC_option;\r\n    console.log('ac ',selectingDropDown)\r\n    //Title = props.Title;\r\n  }\r\n  else{\r\n     selectingDropDown = props.Capacity;\r\n    console.log('capacity ',selectingDropDown);\r\n    //Title = props.Title;\r\n  }*/\r\n\r\n  const [chooseData, setChooseData] = useState(\r\n    Title\r\n  );\r\n\r\n  const [isModeVisible, setisModeVisible] = useState(false);\r\n  const changeModalVisibility = (bool) => {\r\n    setisModeVisible(bool);\r\n  };\r\n\r\n  const setData = (selectingDropDown) => {\r\n\r\n    props.PickerValue(selectingDropDown)\r\n    setChooseData(selectingDropDown);\r\n  };\r\n\r\n  return (\r\n    <SafeAreaViewContainer>\r\n      <TouchableOpacityPicker\r\n        onPress={() =>{ changeModalVisibility(true);\r\n                        //setChooseData()\r\n        }}\r\n      >\r\n        <Subtitle>{chooseData}</Subtitle>\r\n      </TouchableOpacityPicker>\r\n      <Modal\r\n        transparent={true}\r\n        animationType=\"fade\"\r\n        visible={isModeVisible}\r\n        nRequestClose={() => changeModalVisibility(false)}\r\n      >\r\n        <ModalPicker\r\n          changeModalVisibility={changeModalVisibility}\r\n          setData={setData}\r\n          array={selectingDropDown}\r\n        />\r\n      </Modal>\r\n    </SafeAreaViewContainer>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}