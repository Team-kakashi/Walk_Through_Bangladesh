{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Card } from \"react-native-paper\";\nimport styled from \"styled-components/native\";\nimport personIcon from \"../../../../assets/icons/person.png\";\nimport moneyIcon from \"../../../../assets/icons/money.png\";\nimport acIcon from \"../../../../assets/icons/ac.png\";\nimport { CardDetails } from \"../../../components/roomCard.style\";\nimport { IconTextContainer, CardParent, Row, Subtitle, Title, ImagePreview, ImagePreviewContainer, Icon, SpacingSmall } from \"../../../components/common.style\";\nimport { IpRoute } from \"../../../components/environmentVeriables\";\nimport { user_id } from \"../../authentication/screens/logIn.screen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar keyid = 0;\nvar x = 0;\nexport var RoomCard = function RoomCard(_ref) {\n  var _ref$roomCardInfo = _ref.roomCardInfo,\n      roomCardInfo = _ref$roomCardInfo === void 0 ? {} : _ref$roomCardInfo;\n\n  var _useState = useState([{}]),\n      _useState2 = _slicedToArray(_useState, 2),\n      room = _useState2[0],\n      setRoom = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loadPage = _useState4[0],\n      setloadPage = _useState4[1];\n\n  var submitData = function submitData() {\n    fetch(IpRoute + \"/getRoom\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId: user_id\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data == \"wrong credential\") {\n        Alert.alert(data);\n      } else {\n        setRoom(data);\n        console.log(data);\n        console.log(data[0].room_number);\n\n        if (data[0].room_number == null) {\n          setloadPage(false);\n        }\n\n        ;\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  useEffect(function () {\n    submitData();\n    console.log(room);\n  }, []);\n  var _roomCardInfo$roomNum = roomCardInfo.roomNumber,\n      roomNumber = _roomCardInfo$roomNum === void 0 ? \"511\" : _roomCardInfo$roomNum,\n      _roomCardInfo$personN = roomCardInfo.personNumber,\n      personNumber = _roomCardInfo$personN === void 0 ? \"5 Persons\" : _roomCardInfo$personN,\n      _roomCardInfo$photos = roomCardInfo.photos,\n      photos = _roomCardInfo$photos === void 0 ? [\"https://images.unsplash.com/photo-1615874959474-d609969a20ed?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8N3x8YmVkcm9vbXxlbnwwfHwwfHw%3D&w=1000&q=80\", \"https://images.unsplash.com/photo-1540518614846-7eded433c457?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8M3x8YmVkcm9vbXxlbnwwfHwwfHw%3D&w=1000&q=80\"] : _roomCardInfo$photos,\n      _roomCardInfo$AC = roomCardInfo.AC,\n      AC = _roomCardInfo$AC === void 0 ? \"Non AC\" : _roomCardInfo$AC,\n      _roomCardInfo$rent = roomCardInfo.rent,\n      rent = _roomCardInfo$rent === void 0 ? \"5000 BDT/Night\" : _roomCardInfo$rent;\n  return _jsx(_Fragment, {\n    children: loadPage ? _jsx(_Fragment, {\n      children: room.map(function (i) {\n        return _jsx(CardParent, {\n          elevation: 5,\n          children: _jsxs(Row, {\n            children: [_jsxs(CardDetails, {\n              children: [_jsx(Title, {\n                children: i.room_number\n              }, keyid++), _jsx(SpacingSmall, {}), _jsxs(IconTextContainer, {\n                children: [_jsx(Icon, {\n                  source: personIcon\n                }), _jsxs(Subtitle, {\n                  children: [i.room_capacity, \" Persons\"]\n                })]\n              }), _jsxs(IconTextContainer, {\n                children: [_jsx(Icon, {\n                  source: acIcon\n                }), _jsx(Subtitle, {\n                  children: i.room_ac_option\n                })]\n              }), _jsxs(IconTextContainer, {\n                children: [_jsx(Icon, {\n                  source: moneyIcon\n                }), _jsxs(Subtitle, {\n                  children: [i.room_rent, \" BDT/Night\"]\n                })]\n              })]\n            }), _jsxs(ImagePreviewContainer, {\n              children: [_jsx(ImagePreview, {\n                source: {\n                  uri: photos[0]\n                }\n              }), _jsx(ImagePreview, {\n                source: {\n                  uri: photos[1]\n                }\n              })]\n            })]\n          })\n        });\n      })\n    }) : _jsx(_Fragment, {})\n  });\n};","map":{"version":3,"sources":["E:/Development/Walk_Through_Bangladesh/src/features/hotelManager/componenets/roomCard.component.js"],"names":["React","useEffect","useState","Card","styled","personIcon","moneyIcon","acIcon","CardDetails","IconTextContainer","CardParent","Row","Subtitle","Title","ImagePreview","ImagePreviewContainer","Icon","SpacingSmall","IpRoute","user_id","keyid","x","RoomCard","roomCardInfo","room","setRoom","loadPage","setloadPage","submitData","fetch","method","headers","body","JSON","stringify","userId","then","res","json","data","Alert","alert","console","log","room_number","catch","err","roomNumber","personNumber","photos","AC","rent","map","i","room_capacity","room_ac_option","room_rent","uri"],"mappings":"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","sourcesContent":["/** @format */\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Text, View, Image } from \"react-native\";\r\nimport { Card } from \"react-native-paper\";\r\nimport styled from \"styled-components/native\";\r\nimport personIcon from \"../../../../assets/icons/person.png\";\r\nimport moneyIcon from \"../../../../assets/icons/money.png\";\r\nimport acIcon from \"../../../../assets/icons/ac.png\";\r\nimport { CardDetails } from \"../../../components/roomCard.style\";\r\nimport {\r\n  IconTextContainer,\r\n  CardParent,\r\n  Row,\r\n  Subtitle,\r\n  Title,\r\n  ImagePreview,\r\n  ImagePreviewContainer,\r\n  Icon,\r\n  SpacingSmall,\r\n} from \"../../../components/common.style\";\r\nimport {IpRoute} from \"../../../components/environmentVeriables\";\r\nimport {user_id} from \"../../authentication/screens/logIn.screen\"\r\n\r\nvar keyid=0;\r\nvar x=0;\r\nexport const RoomCard = ({ roomCardInfo = {} }) => {\r\n\r\n  const[room,setRoom]=useState([{}]);\r\n  const[loadPage,setloadPage]= useState(true);\r\n  \r\n  const submitData = () => {\r\n    fetch(IpRoute+\"/getRoom\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        userId: user_id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        //console.log(res.status())\r\n        if (data == \"wrong credential\") {\r\n          Alert.alert(data);\r\n        } else {\r\n          setRoom(data);\r\n          console.log(data);\r\n          console.log(data[0].room_number);\r\n          if(data[0].room_number==null){\r\n            setloadPage(false);\r\n          };\r\n          \r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        //Alert.alert(err)\r\n      });\r\n  };\r\n \r\n  useEffect(()=>{\r\n    submitData();\r\n    console.log(room);\r\n  },[])\r\n  \r\n  const {\r\n    roomNumber = \"511\",\r\n    personNumber = \"5 Persons\",\r\n    photos = [\r\n      \"https://images.unsplash.com/photo-1615874959474-d609969a20ed?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8N3x8YmVkcm9vbXxlbnwwfHwwfHw%3D&w=1000&q=80\",\r\n      \"https://images.unsplash.com/photo-1540518614846-7eded433c457?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8M3x8YmVkcm9vbXxlbnwwfHwwfHw%3D&w=1000&q=80\",\r\n    ],\r\n    AC = \"Non AC\",\r\n    rent = \"5000 BDT/Night\",\r\n  } = roomCardInfo;\r\n\r\n  return (\r\n    <>\r\n    {loadPage \r\n    ?<>\r\n    { room.map(i =>(\r\n      \r\n    <CardParent elevation={5}>\r\n      \r\n      <Row>\r\n        <CardDetails>\r\n        \r\n          <Title key={keyid++}>{i.room_number}</Title>\r\n        \r\n          <SpacingSmall />\r\n\r\n          <IconTextContainer>\r\n            <Icon source={personIcon} />\r\n            <Subtitle >{i.room_capacity} Persons</Subtitle>\r\n          </IconTextContainer>\r\n          <IconTextContainer>\r\n            <Icon source={acIcon} />\r\n            <Subtitle >{i.room_ac_option}</Subtitle>\r\n          </IconTextContainer>\r\n          <IconTextContainer>\r\n            <Icon source={moneyIcon} />\r\n            <Subtitle >{i.room_rent} BDT/Night</Subtitle>\r\n          </IconTextContainer>\r\n        </CardDetails>\r\n        <ImagePreviewContainer>\r\n          <ImagePreview source={{ uri: photos[0] }} />\r\n          <ImagePreview source={{ uri: photos[1] }} />\r\n        </ImagePreviewContainer>\r\n      </Row>\r\n       \r\n    </CardParent>\r\n    \r\n     ))}\r\n    </>\r\n    :<></>\r\n}\r\n     </>\r\n  );\r\n};\r\n\r\n//npm install @expo-google-fonts/roboto-slab\r\n"]},"metadata":{},"sourceType":"module"}