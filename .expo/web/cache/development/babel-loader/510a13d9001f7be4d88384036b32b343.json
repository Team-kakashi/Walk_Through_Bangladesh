{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { IpRoute } from \"../../../components/environmentVeriables\";\nimport { SafeAreaViewContainer, TextInputTheme, SpacingLarge, PrimaryButton, H1 } from \"../../../components/common.style\";\nimport { ModalView, ItemChoise } from \"../../../components/modalView.view\";\nimport { user_id } from \"../../authentication/screens/logIn.screen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ac_op;\nvar cap;\nexport var AddRoomScreen = function AddRoomScreen(_ref) {\n  var navigation = _ref.navigation;\n  var AC_option = [\"AC\", \"Non_AC\"];\n  var Capacity = [1, 2, 3, 4];\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      number = _React$useState2[0],\n      setNumber = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rent = _React$useState4[0],\n      setRent = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      description = _React$useState6[0],\n      setDescription = _React$useState6[1];\n\n  var onPressAdd = function onPressAdd() {\n    console.log(user_id);\n\n    if (number == \"\" || rent == \"\") {\n      Alert.alert(\"Fill all fields\");\n    } else {\n      submitData();\n      setNumber(\"\");\n      setRent(\"\");\n      setDescription(\"\");\n    }\n  };\n\n  function selectPickerValue(item) {\n    console.log(\"my slected item\", item);\n    ac_op = item;\n  }\n\n  function selectCapacityValue(item) {\n    console.log(\"my slected item\", item);\n    cap = item;\n  }\n\n  var submitData = function submitData() {\n    fetch(IpRoute + \"/addRoom\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId: user_id,\n        room_number: number,\n        room_rent: rent,\n        room_capacity: cap,\n        room_ac_option: ac_op,\n        room_description: description\n      })\n    }).then(function (res) {\n      return res.status;\n    }).then(function (data) {\n      if (data == 200) {\n        console.log(data);\n        navigation.push(\"HotelManagerLandingScreen\");\n        Alert.alert(\"Room successfully Added !\");\n      } else if (data == 500) {\n        Alert.alert(\"Room already exists !\");\n      } else {\n        Alert.alert(\"Database error !\");\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  return _jsx(SafeAreaViewContainer, {\n    children: _jsxs(ScrollView, {\n      children: [_jsx(H1, {\n        children: \"Add Room\"\n      }), _jsx(SpacingLarge, {}), _jsx(TextInputTheme, {\n        label: \"Number\",\n        onChangeText: setNumber,\n        value: number\n      }), _jsx(TextInputTheme, {\n        label: \"Rent\",\n        onChangeText: setRent,\n        value: rent\n      }), _jsx(TextInputTheme, {\n        label: \"Description (Optional)\",\n        onChangeText: setDescription,\n        value: description\n      }), _jsx(ModalView, {\n        Array: AC_option,\n        Title: \"Ac_options\",\n        PickerValue: selectPickerValue\n      }), _jsx(ModalView, {\n        Array: Capacity,\n        Title: \"Capacities\",\n        PickerValue: selectCapacityValue\n      }), _jsx(SpacingLarge, {}), _jsx(PrimaryButton, {\n        icon: \"plus-circle\",\n        onPress: onPressAdd,\n        children: \"Add\"\n      })]\n    })\n  });\n};","map":{"version":3,"sources":["E:/Development/Walk_Through_Bangladesh/src/features/hotelManager/screens/addRoom.hotelManager.screen.js"],"names":["React","useState","IpRoute","SafeAreaViewContainer","TextInputTheme","SpacingLarge","PrimaryButton","H1","ModalView","ItemChoise","user_id","ac_op","cap","AddRoomScreen","navigation","AC_option","Capacity","number","setNumber","rent","setRent","description","setDescription","onPressAdd","console","log","Alert","alert","submitData","selectPickerValue","item","selectCapacityValue","fetch","method","headers","body","JSON","stringify","userId","room_number","room_rent","room_capacity","room_ac_option","room_description","then","res","status","data","push","catch","err"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,OAAT;AACA,SACEC,qBADF,EAEEC,cAFF,EAGEC,YAHF,EAIEC,aAJF,EAKEC,EALF;AAOA,SAASC,SAAT,EAAoBC,UAApB;AACA,SAAQC,OAAR;;;AAEA,IAAIC,KAAJ;AACA,IAAIC,GAAJ;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC/C,MAAMC,SAAS,GAAG,CAAC,IAAD,EAAO,QAAP,CAAlB;AACA,MAAMC,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAjB;;AAEA,wBAA4BhB,KAAK,CAACC,QAAN,CAAe,EAAf,CAA5B;AAAA;AAAA,MAAOgB,MAAP;AAAA,MAAeC,SAAf;;AACA,yBAAwBlB,KAAK,CAACC,QAAN,CAAe,EAAf,CAAxB;AAAA;AAAA,MAAOkB,IAAP;AAAA,MAAaC,OAAb;;AACA,yBAAsCpB,KAAK,CAACC,QAAN,CAAe,EAAf,CAAtC;AAAA;AAAA,MAAOoB,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAEvBC,IAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ;;AACA,QAAIO,MAAM,IAAI,EAAV,IAAgBE,IAAI,IAAI,EAA5B,EAAgC;AAC9BO,MAAAA,KAAK,CAACC,KAAN,CAAY,iBAAZ;AACD,KAFD,MAEO;AACLC,MAAAA,UAAU;AACVV,MAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GAXD;;AAaA,WAASO,iBAAT,CAA2BC,IAA3B,EAAiC;AAC/BN,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BK,IAA/B;AACAnB,IAAAA,KAAK,GAAGmB,IAAR;AACD;;AAED,WAASC,mBAAT,CAA6BD,IAA7B,EAAmC;AACjCN,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BK,IAA/B;AACAlB,IAAAA,GAAG,GAAGkB,IAAN;AACD;;AAED,MAAMF,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBI,IAAAA,KAAK,CAAC9B,OAAO,GAAG,UAAX,EAAuB;AAC1B+B,MAAAA,MAAM,EAAE,MADkB;AAE1BC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiB;AAK1BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,MAAM,EAAE5B,OADW;AAEnB6B,QAAAA,WAAW,EAAEtB,MAFM;AAGnBuB,QAAAA,SAAS,EAAErB,IAHQ;AAInBsB,QAAAA,aAAa,EAAE7B,GAJI;AAKnB8B,QAAAA,cAAc,EAAE/B,KALG;AAMnBgC,QAAAA,gBAAgB,EAAEtB;AANC,OAAf;AALoB,KAAvB,CAAL,CAcGuB,IAdH,CAcQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,MAAb;AAAA,KAdR,EAeGF,IAfH,CAeQ,UAACG,IAAD,EAAU;AAEd,UAAIA,IAAI,IAAI,GAAZ,EAAiB;AACfvB,QAAAA,OAAO,CAACC,GAAR,CAAYsB,IAAZ;AACAjC,QAAAA,UAAU,CAACkC,IAAX,CAAgB,2BAAhB;AACAtB,QAAAA,KAAK,CAACC,KAAN,CAAY,2BAAZ;AACD,OAJD,MAIO,IAAIoB,IAAI,IAAI,GAAZ,EAAiB;AACtBrB,QAAAA,KAAK,CAACC,KAAN,CAAY,uBAAZ;AACD,OAFM,MAEA;AACLD,QAAAA,KAAK,CAACC,KAAN,CAAY,kBAAZ;AACD;AACF,KA1BH,EA2BGsB,KA3BH,CA2BS,UAACC,GAAD,EAAS;AACd1B,MAAAA,OAAO,CAACC,GAAR,CAAYyB,GAAZ;AAED,KA9BH;AA+BD,GAhCD;;AAkCA,SACE,KAAC,qBAAD;AAAA,cACE,MAAC,UAAD;AAAA,iBACE,KAAC,EAAD;AAAA;AAAA,QADF,EAGE,KAAC,YAAD,KAHF,EAKE,KAAC,cAAD;AACE,QAAA,KAAK,EAAC,QADR;AAEE,QAAA,YAAY,EAAEhC,SAFhB;AAGE,QAAA,KAAK,EAAED;AAHT,QALF,EAUE,KAAC,cAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,YAAY,EAAEG,OAFhB;AAGE,QAAA,KAAK,EAAED;AAHT,QAVF,EAeE,KAAC,cAAD;AACE,QAAA,KAAK,EAAC,wBADR;AAEE,QAAA,YAAY,EAAEG,cAFhB;AAGE,QAAA,KAAK,EAAED;AAHT,QAfF,EAqBE,KAAC,SAAD;AACE,QAAA,KAAK,EAAEN,SADT;AAEE,QAAA,KAAK,EAAC,YAFR;AAGE,QAAA,WAAW,EAAEc;AAHf,QArBF,EA0BE,KAAC,SAAD;AACE,QAAA,KAAK,EAAEb,QADT;AAEE,QAAA,KAAK,EAAC,YAFR;AAGE,QAAA,WAAW,EAAEe;AAHf,QA1BF,EAgCE,KAAC,YAAD,KAhCF,EAkCE,KAAC,aAAD;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAER,UAFX;AAAA;AAAA,QAlCF;AAAA;AADF,IADF;AA6CD,CA9GM","sourcesContent":["/** @format */\r\n\r\nimport React, { useState } from \"react\";\r\nimport { ScrollView, View, Alert } from \"react-native\";\r\nimport { IpRoute } from \"../../../components/environmentVeriables\";\r\nimport {\r\n  SafeAreaViewContainer,\r\n  TextInputTheme,\r\n  SpacingLarge,\r\n  PrimaryButton,\r\n  H1,\r\n} from \"../../../components/common.style\";\r\nimport { ModalView, ItemChoise } from \"../../../components/modalView.view\";\r\nimport {user_id} from \"../../authentication/screens/logIn.screen\";\r\n\r\nvar ac_op;\r\nvar cap;\r\nexport const AddRoomScreen = ({ navigation }) => {\r\n  const AC_option = [\"AC\", \"Non_AC\"];\r\n  const Capacity = [1, 2, 3, 4];\r\n\r\n  const [number, setNumber] = React.useState(\"\");\r\n  const [rent, setRent] = React.useState(\"\");\r\n  const [description, setDescription] = React.useState(\"\");\r\n\r\n  const onPressAdd = () => {\r\n    // console.log(ItemChoise);\r\n    console.log(user_id);\r\n    if (number == \"\" || rent == \"\") {\r\n      Alert.alert(\"Fill all fields\");\r\n    } else {\r\n      submitData();\r\n      setNumber(\"\");\r\n      setRent(\"\");\r\n      setDescription(\"\");\r\n    }\r\n  };\r\n\r\n  function selectPickerValue(item) {\r\n    console.log(\"my slected item\", item);\r\n    ac_op = item;\r\n  }\r\n\r\n  function selectCapacityValue(item) {\r\n    console.log(\"my slected item\", item);\r\n    cap = item;\r\n  }\r\n\r\n  const submitData = () => {\r\n    fetch(IpRoute + \"/addRoom\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        userId: user_id,\r\n        room_number: number,\r\n        room_rent: rent,\r\n        room_capacity: cap,\r\n        room_ac_option: ac_op,\r\n        room_description: description,\r\n      }),\r\n    })\r\n      .then((res) => res.status)\r\n      .then((data) => {\r\n        //console.log(res.status())\r\n        if (data == 200) {\r\n          console.log(data);\r\n          navigation.push(\"HotelManagerLandingScreen\");\r\n          Alert.alert(\"Room successfully Added !\");\r\n        } else if (data == 500) {\r\n          Alert.alert(\"Room already exists !\");\r\n        } else {\r\n          Alert.alert(\"Database error !\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        //Alert.alert(err)\r\n      });\r\n  };\r\n\r\n  return (\r\n    <SafeAreaViewContainer>\r\n      <ScrollView>\r\n        <H1>Add Room</H1>\r\n\r\n        <SpacingLarge />\r\n\r\n        <TextInputTheme\r\n          label=\"Number\"\r\n          onChangeText={setNumber}\r\n          value={number}\r\n        ></TextInputTheme>\r\n        <TextInputTheme\r\n          label=\"Rent\"\r\n          onChangeText={setRent}\r\n          value={rent}\r\n        ></TextInputTheme>\r\n        <TextInputTheme\r\n          label=\"Description (Optional)\"\r\n          onChangeText={setDescription}\r\n          value={description}\r\n        ></TextInputTheme>\r\n\r\n        <ModalView\r\n          Array={AC_option}\r\n          Title=\"Ac_options\"\r\n          PickerValue={selectPickerValue}\r\n        ></ModalView>\r\n        <ModalView\r\n          Array={Capacity}\r\n          Title=\"Capacities\"\r\n          PickerValue={selectCapacityValue}\r\n        ></ModalView>\r\n\r\n        <SpacingLarge />\r\n\r\n        <PrimaryButton\r\n          icon=\"plus-circle\"\r\n          onPress={onPressAdd}\r\n        >\r\n          Add\r\n        </PrimaryButton>\r\n      </ScrollView>\r\n    </SafeAreaViewContainer>\r\n  );\r\n};\r\n/** @format */\r\n"]},"metadata":{},"sourceType":"module"}