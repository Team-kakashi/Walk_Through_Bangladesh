{"ast":null,"code":"import React from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport styled from \"styled-components/native\";\nimport { SafeAreaViewContainer, TextInputTheme, SpacingLarge, PrimaryButton, H1 } from \"../../../components/common.style\";\nimport { ModalView, ItemChoise } from \"../../../components/modalView.view\";\nimport { IpRoute } from \"../../../components/environmentVeriables\";\nimport { PlanContentContext } from \"../components/planContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar serviceArea;\nvar serviceRoute;\nvar dayno;\nvar personno;\nvar arealist = [],\n    routelist = [];\nexport var TravellerPlanScreen = function TravellerPlanScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useContext = React.useContext(PlanContentContext),\n      days = _React$useContext.days,\n      setDays = _React$useContext.setDays,\n      persons = _React$useContext.persons,\n      setPersons = _React$useContext.setPersons,\n      budget = _React$useContext.budget,\n      setBudget = _React$useContext.setBudget,\n      area = _React$useContext.area,\n      setArea = _React$useContext.setArea,\n      route = _React$useContext.route,\n      setRoute = _React$useContext.setRoute;\n\n  var day = [1, 2, 3, 4];\n  var Person = [1, 2, 3, 4, 5];\n\n  var getArea = function getArea() {\n    fetch(IpRoute + \"/getAllAreaRoute\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({})\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data == \"wrong credential\") {\n        Alert.alert(data);\n      } else {\n        var j = 0;\n\n        for (var i = 0; i < data.length; i++) {\n          arealist[j++] = data[i].area;\n        }\n\n        console.log(data);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var selectAreaValue = function selectAreaValue(item) {\n    console.log(\"my slected item\", item);\n    serviceArea = item;\n  };\n\n  var getRoute = function getRoute(area, day) {\n    console.log(area + \", \" + day);\n    fetch(IpRoute + \"/getRouteForTraveller\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        address: area,\n        day: day\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data == \"wrong credential\") {\n        Alert.alert(data);\n      } else {\n        var cnt = 0;\n\n        for (var i = 1; i <= data[data.length - 1].planid; i++) {\n          for (var j = 0; j < data.length; j++) {\n            if (i == data[j].planid && data[j] != undefined && routelist[cnt] == undefined) {\n              routelist[cnt] = data[j].route + \", \";\n            } else if (i == data[j].planid && data[j] != undefined) {\n              routelist[cnt] += data[j].route + \", \";\n            }\n          }\n\n          cnt++;\n        }\n\n        console.log(data);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var selectRouteValue = function selectRouteValue(item) {\n    console.log(\"my slected item\", item);\n    serviceRoute = item;\n  };\n\n  React.useEffect(function () {\n    getArea();\n  }, []);\n\n  var selectDayValue = function selectDayValue(item) {\n    console.log(\"my slected item\", item);\n    dayno = item;\n    console.log(\"in select day\" + serviceArea);\n    getRoute(serviceArea, dayno);\n  };\n\n  var selectPersonValue = function selectPersonValue(item) {\n    console.log(\"my slected item\", item);\n    personno = item;\n  };\n\n  var onpressbtn = function onpressbtn() {\n    if (budget == \"\") {\n      Alert.alert(\"Fill all fields\");\n    } else {\n      setArea(serviceArea);\n      setRoute(serviceRoute);\n      setBudget(budget);\n      setDays(dayno);\n      setPersons(personno);\n      console.log(serviceArea + \" \" + serviceRoute + \" \" + budget + \" \" + dayno);\n      console.log(area + \" \" + route + \" \" + days + \" \" + persons + \" \" + budget);\n    }\n  };\n\n  return _jsx(SafeAreaViewContainer, {\n    children: _jsxs(ScrollView, {\n      children: [_jsx(H1, {\n        children: \"Plan Generate\"\n      }), _jsx(SpacingLarge, {}), _jsx(ModalView, {\n        Title: \"Area\",\n        Array: arealist,\n        PickerValue: selectAreaValue\n      }), _jsx(ModalView, {\n        Title: \"Days\",\n        Array: day,\n        PickerValue: selectDayValue\n      }), _jsx(ModalView, {\n        Title: \"Route\",\n        Array: routelist,\n        PickerValue: selectRouteValue\n      }), _jsx(TextInputTheme, {\n        label: \"Budget\",\n        onChangeText: setBudget,\n        value: budget\n      }), _jsx(ModalView, {\n        Title: \"Days\",\n        Array: day,\n        PickerValue: selectDayValue\n      }), _jsx(ModalView, {\n        Title: \"Persons\",\n        Array: Person,\n        PickerValue: selectPersonValue\n      }), _jsx(SpacingLarge, {}), _jsx(PrimaryButton, {\n        icon: \"plus-circle\",\n        onPress: onpressbtn,\n        children: \"Generate\"\n      })]\n    })\n  });\n};","map":{"version":3,"sources":["E:/Development/Walk_Through_Bangladesh/src/features/traveller/screens/travellerPlanInput.screen.js"],"names":["React","styled","SafeAreaViewContainer","TextInputTheme","SpacingLarge","PrimaryButton","H1","ModalView","ItemChoise","IpRoute","PlanContentContext","serviceArea","serviceRoute","dayno","personno","arealist","routelist","TravellerPlanScreen","navigation","useContext","days","setDays","persons","setPersons","budget","setBudget","area","setArea","route","setRoute","day","Person","getArea","fetch","method","headers","body","JSON","stringify","then","res","json","data","Alert","alert","j","i","length","console","log","catch","err","selectAreaValue","item","getRoute","address","cnt","planid","undefined","selectRouteValue","useEffect","selectDayValue","selectPersonValue","onpressbtn"],"mappings":"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","sourcesContent":["/** @format */\r\n\r\nimport React from \"react\";\r\nimport { ScrollView, View } from \"react-native\";\r\nimport { Alert } from \"react-native-web\";\r\nimport styled from \"styled-components/native\";\r\nimport {\r\n    SafeAreaViewContainer,\r\n    TextInputTheme,\r\n    SpacingLarge,\r\n    PrimaryButton,\r\n    H1,\r\n} from \"../../../components/common.style\";\r\nimport { ModalView, ItemChoise } from \"../../../components/modalView.view\";\r\nimport { IpRoute } from \"../../../components/environmentVeriables\";\r\nimport {PlanContentContext} from \"../components/planContext\";\r\n\r\nvar serviceArea;\r\nvar serviceRoute;\r\nvar dayno; \r\nvar personno;\r\nvar arealist = [], routelist = [];\r\nexport const TravellerPlanScreen = ({navigation}) => {\r\n\r\n  const {days, setDays, persons, setPersons, budget, setBudget, area, setArea, route, setRoute} = React.useContext(PlanContentContext);\r\n  // const [persons, setPersons] = React.useContext(PlanContentContext);\r\n  // const [budget, setBudget] = React.useContext(PlanContentContext);\r\n  // const [area,setArea] = React.useContext(PlanContentContext);\r\n  // const [route,setRoute] =React.useContext(PlanContentContext);\r\n\r\n\r\n\r\n  const day= [1,2,3,4];\r\n  const Person = [1,2,3,4,5];\r\n\r\n  \r\n\r\n  const getArea = () => {\r\n    fetch(IpRoute+\"/getAllAreaRoute\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        \r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        //console.log(res.status())\r\n        if (data == \"wrong credential\") {\r\n          Alert.alert(data);\r\n        } else {\r\n          var j=0;\r\n          for (var i=0;i<data.length;i++){\r\n            arealist[j++]= data[i].area;\r\n          }\r\n          console.log(data);\r\n          \r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        //Alert.alert(err)\r\n      });\r\n  };\r\n\r\n  const selectAreaValue=(item)=>{\r\n    console.log(\"my slected item\", item);\r\n    serviceArea = item;\r\n    \r\n  }\r\n\r\n\r\n  const getRoute = (area,day) => {\r\n    console.log(area+\", \"+day);\r\n    fetch(IpRoute + \"/getRouteForTraveller\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        address: area,\r\n        day: day\r\n      }),\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      //console.log(res.status())\r\n      if (data == \"wrong credential\") {\r\n        Alert.alert(data);\r\n      } else {\r\n        var cnt=0;\r\n    \r\n        for(var i=1;i<=data[data.length-1].planid;i++){\r\n          for(var j=0; j<data.length;j++){\r\n            if(i == data[j].planid && data[j]!= undefined && routelist[cnt]==undefined){\r\n               routelist[cnt]=(data[j].route+\", \");\r\n            }\r\n            else if(i == data[j].planid && data[j]!= undefined){\r\n              routelist[cnt] += (data[j].route+\", \");\r\n            }\r\n          }    \r\n            cnt++;\r\n          \r\n        }\r\n        \r\n        \r\n      console.log(data);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const selectRouteValue=(item)=>{\r\n    console.log(\"my slected item\", item);\r\n    serviceRoute = item;\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    getArea();\r\n  },[])\r\n\r\n  const selectDayValue=(item)=>{\r\n    console.log(\"my slected item\", item);\r\n    dayno = item;\r\n    console.log(\"in select day\"+serviceArea);\r\n    getRoute(serviceArea,dayno);\r\n  }\r\n\r\n  const selectPersonValue=(item)=>{\r\n    console.log(\"my slected item\", item);\r\n    personno = item;\r\n  }\r\n\r\n  const onpressbtn=()=>{\r\n    if (budget == \"\") {\r\n      Alert.alert(\"Fill all fields\");\r\n    }\r\n    else{\r\n    setArea(serviceArea);\r\n    setRoute(serviceRoute);\r\n    setBudget(budget);\r\n    setDays(dayno);\r\n    setPersons(personno);\r\n    console.log (serviceArea+\" \"+serviceRoute+\" \"+budget+\" \"+dayno)\r\n    console.log (area+\" \"+route+\" \"+days+\" \"+persons+\" \"+budget)\r\n    \r\n    }\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <SafeAreaViewContainer>\r\n      <ScrollView>\r\n        <H1>Plan Generate</H1>\r\n\r\n        <SpacingLarge />\r\n\r\n        <ModalView\r\n          Title=\"Area\"\r\n          Array={arealist}\r\n          PickerValue={selectAreaValue}\r\n        ></ModalView>\r\n\r\n        <ModalView\r\n          Title=\"Days\"\r\n          Array={day}\r\n          PickerValue={selectDayValue}\r\n        ></ModalView>\r\n\r\n        <ModalView\r\n          Title=\"Route\"\r\n          Array={routelist}\r\n          PickerValue={selectRouteValue}\r\n        ></ModalView>\r\n\r\n      <TextInputTheme \r\n      label=\"Budget\"\r\n      onChangeText={setBudget}\r\n      value={budget}\r\n      ></TextInputTheme>\r\n\r\n        <ModalView\r\n          Title=\"Days\"\r\n          Array={day}\r\n          PickerValue={selectDayValue}\r\n        ></ModalView>\r\n\r\n        <ModalView\r\n          Title=\"Persons\"\r\n          Array={Person}\r\n          PickerValue={selectPersonValue}\r\n        ></ModalView>\r\n\r\n\r\n        <SpacingLarge />\r\n        <PrimaryButton\r\n          icon=\"plus-circle\" onPress={onpressbtn}\r\n        >\r\n          Generate\r\n        </PrimaryButton>\r\n      </ScrollView>\r\n    </SafeAreaViewContainer>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}