{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { IpRoute } from \"../../../components/environmentVeriables\";\nimport { SafeAreaViewContainer, TextInputTheme, SpacingLarge, PrimaryButton, H1 } from \"../../../components/common.style\";\nimport { ModalView, ItemChoise } from \"../../../components/modalView.view\";\nimport { user_id } from \"../../authentication/screens/logIn.screen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar serviceRoute;\nexport var AddServiceScreen = function AddServiceScreen(_ref) {\n  var navigation = _ref.navigation;\n  var route = [\"Ratargul\", \"Bisanakandi\", \"Jaflong\"];\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      cost = _React$useState2[0],\n      setCost = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      yearOfExperience = _React$useState4[0],\n      setYearOfExperience = _React$useState4[1];\n\n  var selectrouteValue = function selectrouteValue(item) {\n    console.log(\"my slected item\", item);\n    serviceRoute = item;\n  };\n\n  var onPressAdd = function onPressAdd() {\n    console.log(user_id);\n\n    if (cost == \"\" || yearOfExperience == \"\") {\n      Alert.alert(\"Fill all fields\");\n    } else {\n      submitData();\n      Alert.alert(serviceRoute);\n      setCost(\"\");\n      setYearOfExperience(\"\");\n    }\n  };\n\n  var getArea = function getArea() {\n    fetch(IpRoute + \"/getRoute\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId: user_id\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data == \"wrong credential\") {\n        Alert.alert(data);\n      } else {\n        console.log(data);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  useEffect(function () {}, []);\n\n  var submitData = function submitData() {\n    fetch(IpRoute + \"/addService\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId: user_id,\n        route: serviceRoute,\n        price: cost,\n        year_of_experience: yearOfExperience\n      })\n    }).then(function (res) {\n      return res.status;\n    }).then(function (data1) {\n      if (data1 == 200) {\n        console.log(data1);\n        navigation.push(\"TourGuideLandingScreen\");\n        Alert.alert(\"Service successfully Added !\");\n      } else if (data1 == 500) {\n        Alert.alert(\"Service route already exists !\");\n      } else {\n        Alert.alert(\"Database error !\");\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  return _jsx(SafeAreaViewContainer, {\n    children: _jsxs(ScrollView, {\n      children: [_jsx(H1, {\n        children: \"Add Service\"\n      }), _jsx(SpacingLarge, {}), _jsx(ModalView, {\n        Array: route,\n        Title: \"Routes\",\n        PickerValue: selectrouteValue\n      }), _jsx(TextInputTheme, {\n        label: \"Cost\",\n        onChangeText: setCost,\n        value: cost\n      }), _jsx(TextInputTheme, {\n        label: \"Year of Experience\",\n        onChangeText: setYearOfExperience,\n        value: yearOfExperience\n      }), _jsx(SpacingLarge, {}), _jsx(PrimaryButton, {\n        icon: \"plus-circle\",\n        onPress: onPressAdd,\n        children: \"Add\"\n      }), _jsx(SpacingLarge, {})]\n    })\n  });\n};","map":{"version":3,"sources":["E:/Development/Walk_Through_Bangladesh/src/features/tourGuide/screens/addService.tourGuide.screen.js"],"names":["React","useEffect","useState","IpRoute","SafeAreaViewContainer","TextInputTheme","SpacingLarge","PrimaryButton","H1","ModalView","ItemChoise","user_id","serviceRoute","AddServiceScreen","navigation","route","cost","setCost","yearOfExperience","setYearOfExperience","selectrouteValue","item","console","log","onPressAdd","Alert","alert","submitData","getArea","fetch","method","headers","body","JSON","stringify","userId","then","res","json","data","catch","err","price","year_of_experience","status","data1","push"],"mappings":"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","sourcesContent":["/** @format */\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ScrollView, View, Alert } from \"react-native\";\r\nimport { IpRoute } from \"../../../components/environmentVeriables\";\r\nimport {\r\n  SafeAreaViewContainer,\r\n  TextInputTheme,\r\n  SpacingLarge,\r\n  PrimaryButton,\r\n  H1,\r\n} from \"../../../components/common.style\";\r\nimport {\r\n  ModalView,\r\n  ItemChoise,\r\n} from \"../../../components/modalView.view\";\r\n\r\nimport {user_id} from \"../../authentication/screens/logIn.screen\";\r\n\r\nvar serviceRoute;\r\nexport const AddServiceScreen = ({navigation}) =>{\r\n\r\n  const route = [\"Ratargul\", \"Bisanakandi\",\"Jaflong\"];\r\n\r\n  \r\n  const [cost, setCost] = React.useState(\"\");\r\n  const [yearOfExperience, setYearOfExperience] = React.useState(\"\");\r\n\r\n  const selectrouteValue=(item)=>{\r\n    console.log(\"my slected item\", item);\r\n    serviceRoute = item;\r\n  }\r\n\r\n  const onPressAdd = () => {\r\n    console.log(user_id);\r\n    if (cost == \"\" || yearOfExperience == \"\") {\r\n      Alert.alert(\"Fill all fields\");\r\n    } else {\r\n      submitData();\r\n      Alert.alert(serviceRoute);\r\n      setCost(\"\");\r\n      setYearOfExperience(\"\");\r\n    }\r\n  };\r\n\r\n\r\n  const getArea = () => {\r\n    fetch(IpRoute + \"/getRoute\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        userId: user_id,\r\n      }),\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      //console.log(res.status())\r\n      if (data == \"wrong credential\") {\r\n        Alert.alert(data);\r\n      } else {\r\n      console.log(data);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    //getArea();\r\n  },[])\r\n\r\n  const submitData = () => {\r\n    fetch(IpRoute + \"/addService\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n      userId: user_id,\r\n      route: serviceRoute,\r\n      price : cost,\r\n      year_of_experience: yearOfExperience,\r\n\r\n      }),\r\n    })\r\n      .then((res) => res.status)\r\n      .then((data1) => {\r\n        //console.log(res.status())\r\n        if (data1 == 200) {\r\n          console.log(data1);\r\n          navigation.push(\"TourGuideLandingScreen\");\r\n          Alert.alert(\"Service successfully Added !\");\r\n        } else if (data1 == 500) {\r\n          Alert.alert(\"Service route already exists !\");\r\n        } else {\r\n          Alert.alert(\"Database error !\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        //Alert.alert(err)\r\n      });\r\n  };\r\n\r\n\r\nreturn(\r\n  <SafeAreaViewContainer>\r\n    <ScrollView>\r\n      <H1>Add Service</H1>\r\n\r\n      <SpacingLarge />\r\n      <ModalView\r\n      Array={route}\r\n      Title=\"Routes\"\r\n      PickerValue={selectrouteValue}\r\n      ></ModalView>\r\n\r\n      <TextInputTheme \r\n      label=\"Cost\"\r\n      onChangeText={setCost}\r\n      value={cost}\r\n      ></TextInputTheme>\r\n      <TextInputTheme \r\n      label=\"Year of Experience\"\r\n      onChangeText={setYearOfExperience}\r\n      value={yearOfExperience}\r\n      ></TextInputTheme>\r\n\r\n      <SpacingLarge />\r\n\r\n      <PrimaryButton icon=\"plus-circle\" onPress={onPressAdd}>Add</PrimaryButton>\r\n      <SpacingLarge />\r\n    </ScrollView>\r\n  </SafeAreaViewContainer>\r\n);\r\n};\r\n/** @format */\r\n"]},"metadata":{},"sourceType":"module"}