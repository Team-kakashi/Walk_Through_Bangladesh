{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { IpRoute } from \"../../../components/environmentVeriables\";\nimport { SafeAreaViewContainer, TextInputTheme, SpacingLarge, PrimaryButton, H1 } from \"../../../components/common.style\";\nimport { ModalView, ItemChoise } from \"../../../components/modalView.view\";\nimport { user_id } from \"../../authentication/screens/logIn.screen\";\nimport { clickProps } from \"react-native-web/dist/cjs/modules/forwardedProps\";\nimport { ContentContext } from \"./vehicleContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar serviceRoute;\nvar routeArry = [];\nexport var AddRouteScreen = function AddRouteScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(ContentContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      vid = _useContext2[0],\n      setVid = _useContext2[1];\n\n  console.log(\"v id in route\", vid);\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      cost = _React$useState2[0],\n      setCost = _React$useState2[1];\n\n  var selectrouteValue = function selectrouteValue(item) {\n    console.log(\"my slected item\", item);\n    serviceRoute = item;\n  };\n\n  var onPressAdd = function onPressAdd() {\n    if (cost == \"\") {\n      Alert.alert(\"Fill all fields\");\n    } else {\n      submitData();\n      Alert.alert(serviceRoute);\n      setCost(\"\");\n    }\n  };\n\n  var getArea = function getArea() {\n    fetch(IpRoute + \"/getVehicle\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId: user_id\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data == \"wrong credential\") {\n        Alert.alert(data);\n      } else {\n        getRoute(data[0].area);\n        console.log(data);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var getRoute = function getRoute(area) {\n    fetch(IpRoute + \"/getAreaRoute\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        area: area\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data == \"wrong credential\") {\n        Alert.alert(data);\n      } else {\n        var j = 0;\n\n        for (var i = 0; i < data.length; i++) {\n          if (data[i].vehicle == true) {\n            routeArry[j++] = data[i].route;\n          }\n\n          if (i == data.length - 1) {\n            console.log(routeArry);\n          }\n        }\n\n        console.log(data);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  useEffect(function () {\n    getArea();\n  }, []);\n\n  var submitData = function submitData() {\n    fetch(IpRoute + \"/addVehicleRoute\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        ownerid: user_id,\n        route: serviceRoute,\n        rent: cost,\n        v_id: vid\n      })\n    }).then(function (res) {\n      return res.status;\n    }).then(function (data1) {\n      if (data1 == 200) {\n        console.log(data1);\n        navigation.push(\"VehicleOwnerLandingScreen\");\n        Alert.alert(\"Route successfully Added !\");\n      } else if (data1 == 500) {\n        Alert.alert(\"Route already exists !\");\n      } else {\n        Alert.alert(\"Database error !\");\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  return _jsx(SafeAreaViewContainer, {\n    children: _jsxs(ScrollView, {\n      children: [_jsx(H1, {\n        children: \"Add Route\"\n      }), _jsx(SpacingLarge, {}), _jsx(ModalView, {\n        Array: routeArry,\n        Title: \"Routes\",\n        PickerValue: selectrouteValue\n      }), _jsx(TextInputTheme, {\n        label: \"Price\",\n        onChangeText: setCost,\n        value: cost\n      }), _jsx(SpacingLarge, {}), _jsx(PrimaryButton, {\n        icon: \"plus-circle\",\n        onPress: onPressAdd,\n        children: \"Add\"\n      }), _jsx(SpacingLarge, {})]\n    })\n  });\n};","map":{"version":3,"sources":["E:/Development/Walk_Through_Bangladesh/src/features/vehicleOwner/components/addRoute.vehicleOwner.screen.js"],"names":["React","useEffect","useState","useContext","IpRoute","SafeAreaViewContainer","TextInputTheme","SpacingLarge","PrimaryButton","H1","ModalView","ItemChoise","user_id","clickProps","ContentContext","serviceRoute","routeArry","AddRouteScreen","navigation","vid","setVid","console","log","cost","setCost","selectrouteValue","item","onPressAdd","Alert","alert","submitData","getArea","fetch","method","headers","body","JSON","stringify","userId","then","res","json","data","getRoute","area","catch","err","j","i","length","vehicle","route","ownerid","rent","v_id","status","data1","push"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;;;;AAEA,SAASC,OAAT;AACA,SACEC,qBADF,EAEEC,cAFF,EAGEC,YAHF,EAIEC,aAJF,EAKEC,EALF;AAOA,SACEC,SADF,EAEEC,UAFF;AAKA,SAASC,OAAT;AACA,SAASC,UAAT,QAA2B,kDAA3B;AAEA,SAAQC,cAAR;;;AAEA,IAAIC,YAAJ;AACA,IAAIC,SAAS,GAAC,EAAd;AACA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAC9C,oBAAqBf,UAAU,CAACW,cAAD,CAA/B;AAAA;AAAA,MAAOK,GAAP;AAAA,MAAYC,MAAZ;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BH,GAA5B;;AAEA,wBAAwBnB,KAAK,CAACE,QAAN,CAAe,EAAf,CAAxB;AAAA;AAAA,MAAOqB,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,gBAAgB,GAAC,SAAjBA,gBAAiB,CAACC,IAAD,EAAQ;AAC7BL,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BI,IAA/B;AACAX,IAAAA,YAAY,GAAGW,IAAf;AACD,GAHD;;AAKA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAEvB,QAAIJ,IAAI,IAAI,EAAZ,EAAgB;AACdK,MAAAA,KAAK,CAACC,KAAN,CAAY,iBAAZ;AACD,KAFD,MAEO;AACLC,MAAAA,UAAU;AACVF,MAAAA,KAAK,CAACC,KAAN,CAAYd,YAAZ;AACAS,MAAAA,OAAO,CAAC,EAAD,CAAP;AAED;AACF,GAVD;;AAYA,MAAMO,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBC,IAAAA,KAAK,CAAC5B,OAAO,GAAC,aAAT,EAAwB;AAC3B6B,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFkB;AAK3BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,MAAM,EAAE1B;AADW,OAAf;AALqB,KAAxB,CAAL,CASG2B,IATH,CASQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KATR,EAUGF,IAVH,CAUQ,UAACG,IAAD,EAAU;AAEd,UAAIA,IAAI,IAAI,kBAAZ,EAAgC;AAC9Bd,QAAAA,KAAK,CAACC,KAAN,CAAYa,IAAZ;AACD,OAFD,MAEO;AAELC,QAAAA,QAAQ,CAACD,IAAI,CAAC,CAAD,CAAJ,CAAQE,IAAT,CAAR;AACAvB,QAAAA,OAAO,CAACC,GAAR,CAAYoB,IAAZ;AAED;AACF,KApBH,EAqBGG,KArBH,CAqBS,UAACC,GAAD,EAAS;AACdzB,MAAAA,OAAO,CAACC,GAAR,CAAYwB,GAAZ;AAED,KAxBH;AAyBD,GA1BD;;AA6BA,MAAMH,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AACzBZ,IAAAA,KAAK,CAAC5B,OAAO,GAAG,eAAX,EAA4B;AAC/B6B,MAAAA,MAAM,EAAE,MADuB;AAE/BC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFsB;AAK/BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBO,QAAAA,IAAI,EAAEA;AADa,OAAf;AALyB,KAA5B,CAAL,CASCL,IATD,CASM,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KATN,EAUCF,IAVD,CAUM,UAACG,IAAD,EAAU;AAEd,UAAIA,IAAI,IAAI,kBAAZ,EAAgC;AAC9Bd,QAAAA,KAAK,CAACC,KAAN,CAAYa,IAAZ;AACD,OAFD,MAEO;AACL,YAAIK,CAAC,GAAC,CAAN;;AACA,aAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACN,IAAI,CAACO,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC5B,cAAGN,IAAI,CAACM,CAAD,CAAJ,CAAQE,OAAR,IAAiB,IAApB,EAAyB;AACvBlC,YAAAA,SAAS,CAAC+B,CAAC,EAAF,CAAT,GAAeL,IAAI,CAACM,CAAD,CAAJ,CAAQG,KAAvB;AACD;;AACD,cAAGH,CAAC,IAAEN,IAAI,CAACO,MAAL,GAAY,CAAlB,EAAoB;AAClB5B,YAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACD;AACF;;AAGHK,QAAAA,OAAO,CAACC,GAAR,CAAYoB,IAAZ;AACC;AACF,KA5BD,EA6BCG,KA7BD,CA6BO,UAACC,GAAD,EAAS;AACdzB,MAAAA,OAAO,CAACC,GAAR,CAAYwB,GAAZ;AACD,KA/BD;AAgCD,GAjCD;;AAmCA7C,EAAAA,SAAS,CAAC,YAAI;AACZ8B,IAAAA,OAAO;AACR,GAFQ,EAEP,EAFO,CAAT;;AAIA,MAAMD,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBE,IAAAA,KAAK,CAAC5B,OAAO,GAAG,kBAAX,EAA+B;AAClC6B,MAAAA,MAAM,EAAE,MAD0B;AAElCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFyB;AAKlCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBe,QAAAA,OAAO,EAAGxC,OADS;AAEnBuC,QAAAA,KAAK,EAAEpC,YAFY;AAGnBsC,QAAAA,IAAI,EAAE9B,IAHa;AAInB+B,QAAAA,IAAI,EAAEnC;AAJa,OAAf;AAL4B,KAA/B,CAAL,CAaGoB,IAbH,CAaQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACe,MAAb;AAAA,KAbR,EAcGhB,IAdH,CAcQ,UAACiB,KAAD,EAAW;AAEf,UAAIA,KAAK,IAAI,GAAb,EAAkB;AAChBnC,QAAAA,OAAO,CAACC,GAAR,CAAYkC,KAAZ;AACAtC,QAAAA,UAAU,CAACuC,IAAX,CAAgB,2BAAhB;AACA7B,QAAAA,KAAK,CAACC,KAAN,CAAY,4BAAZ;AACD,OAJD,MAIO,IAAI2B,KAAK,IAAI,GAAb,EAAkB;AACvB5B,QAAAA,KAAK,CAACC,KAAN,CAAY,wBAAZ;AACD,OAFM,MAEA;AACLD,QAAAA,KAAK,CAACC,KAAN,CAAY,kBAAZ;AACD;AACF,KAzBH,EA0BGgB,KA1BH,CA0BS,UAACC,GAAD,EAAS;AACdzB,MAAAA,OAAO,CAACC,GAAR,CAAYwB,GAAZ;AAED,KA7BH;AA8BD,GA/BD;;AAkCA,SACE,KAAC,qBAAD;AAAA,cACE,MAAC,UAAD;AAAA,iBACE,KAAC,EAAD;AAAA;AAAA,QADF,EAGE,KAAC,YAAD,KAHF,EAIE,KAAC,SAAD;AACA,QAAA,KAAK,EAAE9B,SADP;AAEA,QAAA,KAAK,EAAC,QAFN;AAGA,QAAA,WAAW,EAAES;AAHb,QAJF,EAQE,KAAC,cAAD;AACA,QAAA,KAAK,EAAC,OADN;AAEA,QAAA,YAAY,EAAED,OAFd;AAGA,QAAA,KAAK,EAAED;AAHP,QARF,EAaE,KAAC,YAAD,KAbF,EAeE,KAAC,aAAD;AAAe,QAAA,IAAI,EAAC,aAApB;AAAkC,QAAA,OAAO,EAAEI,UAA3C;AAAA;AAAA,QAfF,EAkBE,KAAC,YAAD,KAlBF;AAAA;AADF,IADF;AAwBD,CArJM","sourcesContent":["/** @format */\r\n\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { ScrollView, View, Alert } from \"react-native\";\r\nimport { IpRoute } from \"../../../components/environmentVeriables\";\r\nimport {\r\n  SafeAreaViewContainer,\r\n  TextInputTheme,\r\n  SpacingLarge,\r\n  PrimaryButton,\r\n  H1,\r\n} from \"../../../components/common.style\";\r\nimport {\r\n  ModalView,\r\n  ItemChoise,\r\n} from \"../../../components/modalView.view\";\r\n\r\nimport { user_id } from \"../../authentication/screens/logIn.screen\";\r\nimport { clickProps } from \"react-native-web/dist/cjs/modules/forwardedProps\";\r\n\r\nimport {ContentContext} from \"./vehicleContext\";\r\n\r\nvar serviceRoute;\r\nvar routeArry=[];\r\nexport const AddRouteScreen = ({navigation}) => {\r\n  const [vid, setVid] =useContext(ContentContext);\r\n  console.log(\"v id in route\",vid);\r\n  //const route = [\"Ratargul\", \"Bisanakandi\",\"Jaflong\"];\r\n  const [cost, setCost] = React.useState(\"\");\r\n\r\n  const selectrouteValue=(item)=>{\r\n    console.log(\"my slected item\", item);\r\n    serviceRoute = item;\r\n  }\r\n\r\n  const onPressAdd = () => {\r\n    \r\n    if (cost == \"\") {\r\n      Alert.alert(\"Fill all fields\");\r\n    } else {\r\n      submitData();\r\n      Alert.alert(serviceRoute);\r\n      setCost(\"\");\r\n      \r\n    }\r\n  };\r\n\r\n  const getArea = () => {\r\n    fetch(IpRoute+\"/getVehicle\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        userId: user_id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        //console.log(res.status())\r\n        if (data == \"wrong credential\") {\r\n          Alert.alert(data);\r\n        } else {\r\n          \r\n          getRoute(data[0].area);\r\n          console.log(data);\r\n          \r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        //Alert.alert(err)\r\n      });\r\n  };\r\n\r\n\r\n  const getRoute = (area) => {\r\n    fetch(IpRoute + \"/getAreaRoute\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        area: area,\r\n      }),\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      //console.log(res.status())\r\n      if (data == \"wrong credential\") {\r\n        Alert.alert(data);\r\n      } else {\r\n        var j=0;\r\n        for(var i=0;i<data.length;i++){\r\n          if(data[i].vehicle==true){\r\n            routeArry[j++]=data[i].route;\r\n          }\r\n          if(i==data.length-1){\r\n            console.log(routeArry);\r\n          }\r\n        }\r\n        \r\n        \r\n      console.log(data);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    getArea();\r\n  },[])\r\n\r\n  const submitData = () => {\r\n    fetch(IpRoute + \"/addVehicleRoute\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        ownerid : user_id,\r\n        route: serviceRoute,\r\n        rent: cost,\r\n        v_id: vid,\r\n    \r\n      }),\r\n    })\r\n      .then((res) => res.status)\r\n      .then((data1) => {\r\n        //console.log(res.status())\r\n        if (data1 == 200) {\r\n          console.log(data1);\r\n          navigation.push(\"VehicleOwnerLandingScreen\");\r\n          Alert.alert(\"Route successfully Added !\");\r\n        } else if (data1 == 500) {\r\n          Alert.alert(\"Route already exists !\");\r\n        } else {\r\n          Alert.alert(\"Database error !\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        //Alert.alert(err)\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <SafeAreaViewContainer>\r\n      <ScrollView>\r\n        <H1>Add Route</H1>\r\n\r\n        <SpacingLarge />\r\n        <ModalView\r\n        Array={routeArry}\r\n        Title=\"Routes\"\r\n        PickerValue={selectrouteValue}></ModalView>\r\n        <TextInputTheme\r\n        label=\"Price\"\r\n        onChangeText={setCost}\r\n        value={cost}></TextInputTheme>\r\n\r\n        <SpacingLarge />\r\n\r\n        <PrimaryButton icon=\"plus-circle\" onPress={onPressAdd}>\r\n          Add\r\n        </PrimaryButton>\r\n        <SpacingLarge />\r\n      </ScrollView>\r\n    </SafeAreaViewContainer>\r\n  );\r\n};\r\n/** @format */\r\n"]},"metadata":{},"sourceType":"module"}