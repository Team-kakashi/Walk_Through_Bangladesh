{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport * as React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { HotelManagerLandingScreen } from \"./src/features/hotelManager/screens/hotelManagerLanding.screen\";\nimport { LogInScreen } from \"./src/features/authentication/screens/logIn.screen\";\nimport { AccountSelectScreen } from \"./src/features/authentication/screens/accountselect.screen\";\nimport { SignupTravellerScreen } from \"./src/features/authentication/screens/signup.traveller.screen\";\nimport { SignupHotelManagerScreen } from \"./src/features/authentication/screens/signup.hotelmanager.screen\";\nimport { SignupBloggerScreen } from \"./src/features/authentication/screens/signup.blogger.screen\";\nimport { SignupTourGuideScreen } from \"./src/features/authentication/screens/signup.tourguide.screen\";\nimport { SignupVehicleOwnerScreen } from \"./src/features/authentication/screens/signup.vehicleowner.screen\";\nimport { AddRoomScreen } from \"./src/features/hotelManager/screens/addRoom.hotelManager.screen\";\nimport { TourGuideLandingScreen } from \"./src/features/tourGuide/screens/tourGuideLanding.screen\";\nimport { AddServiceScreen } from \"./src/features/tourGuide/screens/addService.tourGuide.screen\";\nimport { TravelBloggerLandingScreen } from \"./src/features/travelBlogger/screens/travelBloggerLanding.screen\";\nimport { WriteBlogScreen } from \"./src/features/travelBlogger/screens/writeBlog.travelBlogger.screen\";\nimport { VehicleOwnerLandingScreen } from \"./src/features/vehicleOwner/screens/vehicleOwnerLanding.screen\";\nimport { AddVehicleScreen } from \"./src/features/vehicleOwner/components/addVehicle.vehicleOwner.screen\";\nimport { AddRouteScreen } from \"./src/features/vehicleOwner/components/addRoute.vehicleOwner.screen\";\nimport { VecicleCard } from \"./src/features/vehicleOwner/components/vehicleCard.component\";\nimport { TravellerTabNavigation } from \"./src/features/traveller/screens/travellerTabNavigation.screen\";\nimport { TravellerPlanScreen } from \"./src/features/traveller/screens/travellerPlanInput.screen\";\nimport { TravellerPlansResultScreen } from \"./src/features/traveller/screens/travellerPlans.screens\";\nimport { TravellerHottelResultScreen } from \"./src/features/traveller/screens/travellerHotelResult.screen\";\nimport { TravellerSelectedPlanScreen } from \"./src/features/traveller/screens/travellerSelectedPlan.screen\";\nimport { GuideSelectScreen } from \"./src/features/traveller/screens/travellerGuideSelect.screen\";\nimport { VehicleSelectScreen } from \"./src/features/traveller/screens/travellerVehicleSelect.screen\";\nimport { TravellerFinalPlanScreen } from \"./src/features/traveller/screens/travellerFinalPlan.screen\";\nimport { ThemeProvider } from \"styled-components/native\";\nimport { theme } from \"./src/infrastructure/theme\";\nimport { ContentProvider } from \"./src/features/vehicleOwner/components/vehicleContext\";\nimport { PlanContentProvider } from \"./src/features/traveller/components/planContext\";\nimport { useFonts as useFontsInter, Inter_400Regular, Inter_900Black } from \"@expo-google-fonts/inter\";\nimport { useFonts as useFontsRobotoSlab, RobotoSlab_700Bold } from \"@expo-google-fonts/roboto-slab\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _useFontsInter = useFontsInter({\n    Inter_400Regular: Inter_400Regular,\n    Inter_900Black: Inter_900Black\n  }),\n      _useFontsInter2 = _slicedToArray(_useFontsInter, 1),\n      interLoaded = _useFontsInter2[0];\n\n  var _useFontsRobotoSlab = useFontsRobotoSlab({\n    RobotoSlab_700Bold: RobotoSlab_700Bold\n  }),\n      _useFontsRobotoSlab2 = _slicedToArray(_useFontsRobotoSlab, 1),\n      robotoSlabLoaded = _useFontsRobotoSlab2[0];\n\n  if (!interLoaded || !robotoSlabLoaded) {\n    return null;\n  }\n\n  return _jsx(PlanContentProvider, {\n    children: _jsx(ContentProvider, {\n      children: _jsx(ThemeProvider, {\n        theme: theme,\n        children: _jsx(NavigationContainer, {\n          children: _jsxs(Stack.Navigator, {\n            children: [_jsx(Stack.Screen, {\n              name: \"TravellerFinalPlanScreen\",\n              component: TravellerFinalPlanScreen\n            }), _jsx(Stack.Screen, {\n              name: \"AccountSelectScreen\",\n              component: AccountSelectScreen\n            }), _jsx(Stack.Screen, {\n              name: \"SignupTravellerScreen\",\n              component: SignupTravellerScreen\n            }), _jsx(Stack.Screen, {\n              name: \"SignupHotelManagerScreen\",\n              component: SignupHotelManagerScreen\n            }), _jsx(Stack.Screen, {\n              name: \"SignupBloggerScreen\",\n              component: SignupBloggerScreen\n            }), _jsx(Stack.Screen, {\n              name: \"SignupTourGuideScreen\",\n              component: SignupTourGuideScreen\n            }), _jsx(Stack.Screen, {\n              name: \"SignupVehicleOwnerScreen\",\n              component: SignupVehicleOwnerScreen\n            }), _jsx(Stack.Screen, {\n              name: \"HotelManagerLandingScreen\",\n              component: HotelManagerLandingScreen\n            }), _jsx(Stack.Screen, {\n              name: \"AddRoomScreen\",\n              component: AddRoomScreen\n            }), _jsx(Stack.Screen, {\n              name: \"TourGuideLandingScreen\",\n              component: TourGuideLandingScreen\n            }), _jsx(Stack.Screen, {\n              name: \"AddServiceScreen\",\n              component: AddServiceScreen\n            }), _jsx(Stack.Screen, {\n              name: \"TravelBloggerLandingScreen\",\n              component: TravelBloggerLandingScreen\n            }), _jsx(Stack.Screen, {\n              name: \"WriteBlogScreen\",\n              component: WriteBlogScreen\n            }), _jsx(Stack.Screen, {\n              name: \"AddVehicleScreen\",\n              component: AddVehicleScreen\n            }), _jsx(Stack.Screen, {\n              name: \"VehicleOwnerLandingScreen\",\n              component: VehicleOwnerLandingScreen\n            }), _jsx(Stack.Screen, {\n              name: \"AddRouteScreen\",\n              component: AddRouteScreen\n            }), _jsx(Stack.Screen, {\n              name: \"VecicleCard\",\n              component: VecicleCard\n            }), _jsx(Stack.Screen, {\n              name: \"TravellerTabNavigation\",\n              component: TravellerTabNavigation\n            }), _jsx(Stack.Screen, {\n              name: \"TravellerPlanScreen\",\n              component: TravellerPlanScreen\n            })]\n          })\n        })\n      })\n    })\n  });\n}","map":{"version":3,"sources":["E:/Development/Walk_Through_Bangladesh/App.js"],"names":["StatusBar","React","NavigationContainer","createNativeStackNavigator","HotelManagerLandingScreen","LogInScreen","AccountSelectScreen","SignupTravellerScreen","SignupHotelManagerScreen","SignupBloggerScreen","SignupTourGuideScreen","SignupVehicleOwnerScreen","AddRoomScreen","TourGuideLandingScreen","AddServiceScreen","TravelBloggerLandingScreen","WriteBlogScreen","VehicleOwnerLandingScreen","AddVehicleScreen","AddRouteScreen","VecicleCard","TravellerTabNavigation","TravellerPlanScreen","TravellerPlansResultScreen","TravellerHottelResultScreen","TravellerSelectedPlanScreen","GuideSelectScreen","VehicleSelectScreen","TravellerFinalPlanScreen","ThemeProvider","theme","ContentProvider","PlanContentProvider","useFonts","useFontsInter","Inter_400Regular","Inter_900Black","useFontsRobotoSlab","RobotoSlab_700Bold","Stack","App","interLoaded","robotoSlabLoaded"],"mappings":"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","sourcesContent":["/** @format */\r\n\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport * as React from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n\r\nimport { HotelManagerLandingScreen } from \"./src/features/hotelManager/screens/hotelManagerLanding.screen\";\r\nimport { LogInScreen } from \"./src/features/authentication/screens/logIn.screen\";\r\nimport { AccountSelectScreen } from \"./src/features/authentication/screens/accountselect.screen\";\r\nimport { SignupTravellerScreen } from \"./src/features/authentication/screens/signup.traveller.screen\";\r\nimport { SignupHotelManagerScreen } from \"./src/features/authentication/screens/signup.hotelmanager.screen\";\r\nimport { SignupBloggerScreen } from \"./src/features/authentication/screens/signup.blogger.screen\";\r\nimport { SignupTourGuideScreen } from \"./src/features/authentication/screens/signup.tourguide.screen\";\r\nimport { SignupVehicleOwnerScreen } from \"./src/features/authentication/screens/signup.vehicleowner.screen\";\r\nimport { AddRoomScreen } from \"./src/features/hotelManager/screens/addRoom.hotelManager.screen\";\r\nimport { TourGuideLandingScreen } from \"./src/features/tourGuide/screens/tourGuideLanding.screen\";\r\nimport { AddServiceScreen } from \"./src/features/tourGuide/screens/addService.tourGuide.screen\";\r\nimport { TravelBloggerLandingScreen } from \"./src/features/travelBlogger/screens/travelBloggerLanding.screen\";\r\nimport { WriteBlogScreen } from \"./src/features/travelBlogger/screens/writeBlog.travelBlogger.screen\";\r\nimport { VehicleOwnerLandingScreen } from \"./src/features/vehicleOwner/screens/vehicleOwnerLanding.screen\";\r\nimport { AddVehicleScreen } from \"./src/features/vehicleOwner/components/addVehicle.vehicleOwner.screen\";\r\nimport { AddRouteScreen } from \"./src/features/vehicleOwner/components/addRoute.vehicleOwner.screen\";\r\nimport {VecicleCard} from \"./src/features/vehicleOwner/components/vehicleCard.component\";\r\nimport { TravellerTabNavigation } from \"./src/features/traveller/screens/travellerTabNavigation.screen\";\r\nimport { TravellerPlanScreen } from \"./src/features/traveller/screens/travellerPlanInput.screen\";\r\nimport { TravellerPlansResultScreen } from \"./src/features/traveller/screens/travellerPlans.screens\";\r\nimport { TravellerHottelResultScreen } from \"./src/features/traveller/screens/travellerHotelResult.screen\";\r\nimport { TravellerSelectedPlanScreen } from \"./src/features/traveller/screens/travellerSelectedPlan.screen\";\r\nimport { GuideSelectScreen } from \"./src/features/traveller/screens/travellerGuideSelect.screen\";\r\nimport { VehicleSelectScreen } from \"./src/features/traveller/screens/travellerVehicleSelect.screen\";\r\nimport { TravellerFinalPlanScreen } from \"./src/features/traveller/screens/travellerFinalPlan.screen\";\r\n\r\nimport { ThemeProvider } from \"styled-components/native\";\r\nimport { theme } from \"./src/infrastructure/theme\";\r\n\r\nimport {ContentProvider} from \"./src/features/vehicleOwner/components/vehicleContext\";\r\nimport {PlanContentProvider} from  \"./src/features/traveller/components/planContext\";\r\n\r\nimport {\r\n  useFonts as useFontsInter,\r\n  Inter_400Regular,\r\n  Inter_900Black,\r\n} from \"@expo-google-fonts/inter\";\r\n\r\nimport {\r\n  useFonts as useFontsRobotoSlab,\r\n  RobotoSlab_700Bold,\r\n} from \"@expo-google-fonts/roboto-slab\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function App() {\r\n  const [interLoaded] = useFontsInter({\r\n    Inter_400Regular,\r\n    Inter_900Black,\r\n  });\r\n\r\n  let [robotoSlabLoaded] = useFontsRobotoSlab({\r\n    RobotoSlab_700Bold,\r\n  });\r\n\r\n  if (!interLoaded || !robotoSlabLoaded) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n  <PlanContentProvider>\r\n    <ContentProvider>\r\n    <ThemeProvider theme={theme}>\r\n      <NavigationContainer>\r\n        <Stack.Navigator>\r\n          \r\n         \r\n          \r\n          <Stack.Screen\r\n            name=\"TravellerFinalPlanScreen\"\r\n            component={TravellerFinalPlanScreen}\r\n          />\r\n\r\n          <Stack.Screen\r\n            name=\"AccountSelectScreen\"\r\n            component={AccountSelectScreen}\r\n          />\r\n\r\n          <Stack.Screen\r\n            name=\"SignupTravellerScreen\"\r\n            component={SignupTravellerScreen}\r\n          />\r\n\r\n          <Stack.Screen\r\n            name=\"SignupHotelManagerScreen\"\r\n            component={SignupHotelManagerScreen}\r\n          />\r\n\r\n          <Stack.Screen\r\n            name=\"SignupBloggerScreen\"\r\n            component={SignupBloggerScreen}\r\n          />\r\n\r\n          <Stack.Screen\r\n            name=\"SignupTourGuideScreen\"\r\n            component={SignupTourGuideScreen}\r\n          />\r\n\r\n          <Stack.Screen\r\n            name=\"SignupVehicleOwnerScreen\"\r\n            component={SignupVehicleOwnerScreen}\r\n          />\r\n\r\n          <Stack.Screen\r\n            name=\"HotelManagerLandingScreen\"\r\n            component={HotelManagerLandingScreen}\r\n          />\r\n          <Stack.Screen\r\n            name=\"AddRoomScreen\"\r\n            component={AddRoomScreen}\r\n          />\r\n          <Stack.Screen\r\n            name=\"TourGuideLandingScreen\"\r\n            component={TourGuideLandingScreen}\r\n          />\r\n          <Stack.Screen\r\n            name=\"AddServiceScreen\"\r\n            component={AddServiceScreen}\r\n          />\r\n          <Stack.Screen\r\n            name=\"TravelBloggerLandingScreen\"\r\n            component={TravelBloggerLandingScreen}\r\n          />\r\n          <Stack.Screen\r\n            name=\"WriteBlogScreen\"\r\n            component={WriteBlogScreen}\r\n          />\r\n          <Stack.Screen\r\n            name=\"AddVehicleScreen\"\r\n            component={AddVehicleScreen}\r\n          />\r\n         <Stack.Screen\r\n            name=\"VehicleOwnerLandingScreen\"\r\n            component={VehicleOwnerLandingScreen}\r\n          />\r\n          <Stack.Screen\r\n            name=\"AddRouteScreen\"\r\n            component={AddRouteScreen}\r\n          />\r\n          <Stack.Screen\r\n            name=\"VecicleCard\"\r\n            component={VecicleCard}\r\n          />\r\n         <Stack.Screen\r\n            name=\"TravellerTabNavigation\"\r\n            component={TravellerTabNavigation}\r\n          />\r\n                     \r\n         <Stack.Screen\r\n            name=\"TravellerPlanScreen\"\r\n            component={TravellerPlanScreen}\r\n          />\r\n\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </ThemeProvider>\r\n    </ContentProvider>\r\n    </PlanContentProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}