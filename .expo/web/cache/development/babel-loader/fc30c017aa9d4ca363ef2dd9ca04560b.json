{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport moneyIcon from \"../../../../assets/icons/money.png\";\nimport timerIcon from \"../../../../assets/icons/timer.png\";\nimport { CardDetails } from \"../../../components/roomCard.style\";\nimport { IconTextContainer, CardParent, Row, Subtitle, Title, ImagePreview, ImagePreviewContainer, SpacingSmall, Icon } from \"../../../components/common.style\";\nimport { IpRoute } from \"../../../components/environmentVeriables\";\nimport { user_id } from \"../../authentication/screens/logIn.screen\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar keyid = 0;\nexport var ServiceCard = function ServiceCard(_ref) {\n  var _ref$serviceCardInfo = _ref.serviceCardInfo,\n      serviceCardInfo = _ref$serviceCardInfo === void 0 ? {} : _ref$serviceCardInfo;\n\n  var _React$useState = React.useState([{}]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      service = _React$useState2[0],\n      setService = _React$useState2[1];\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loadPage = _useState2[0],\n      setloadPage = _useState2[1];\n\n  var submitData = function submitData() {\n    fetch(IpRoute + \"/getService\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId: user_id\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data == \"wrong credential\") {\n        Alert.alert(data);\n      } else {\n        setService(data);\n        console.log(data);\n        console.log(service.length);\n        console.log(\"price \", data[0].price);\n\n        if (data[0].price == null) {\n          setloadPage(false);\n        }\n\n        ;\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  useEffect(function () {\n    submitData();\n  }, []);\n  var _serviceCardInfo$trip = serviceCardInfo.tripTitle,\n      tripTitle = _serviceCardInfo$trip === void 0 ? \"Sylhet - Ratargul\" : _serviceCardInfo$trip,\n      _serviceCardInfo$expe = serviceCardInfo.experience,\n      experience = _serviceCardInfo$expe === void 0 ? \"5 years\" : _serviceCardInfo$expe,\n      _serviceCardInfo$phot = serviceCardInfo.photos,\n      photos = _serviceCardInfo$phot === void 0 ? [\"https://www.travelmate.com.bd/wp-content/uploads/2019/07/Ratargul-2.jpg\"] : _serviceCardInfo$phot,\n      _serviceCardInfo$cost = serviceCardInfo.cost,\n      cost = _serviceCardInfo$cost === void 0 ? \"650 BDT\" : _serviceCardInfo$cost;\n  return _jsx(_Fragment, {\n    children: loadPage ? _jsx(_Fragment, {\n      children: service.map(function (i) {\n        return _jsx(CardParent, {\n          elevation: 5,\n          children: _jsxs(Row, {\n            children: [_jsxs(CardDetails, {\n              children: [_jsxs(Title, {\n                children: [i.area, \"-\", i.route]\n              }, keyid++), _jsx(SpacingSmall, {}), _jsxs(IconTextContainer, {\n                children: [_jsx(Icon, {\n                  source: timerIcon\n                }), _jsxs(Subtitle, {\n                  children: [i.year_of_experience, \" Years\"]\n                })]\n              }), _jsxs(IconTextContainer, {\n                children: [_jsx(Icon, {\n                  source: moneyIcon\n                }), _jsxs(Subtitle, {\n                  children: [i.price, \" BDT\"]\n                })]\n              })]\n            }), _jsx(ImagePreviewContainer, {\n              children: _jsx(ImagePreview, {\n                source: {\n                  uri: photos[0]\n                }\n              })\n            })]\n          })\n        });\n      })\n    }) : _jsx(_Fragment, {})\n  });\n};","map":{"version":3,"sources":["E:/Development/Walk_Through_Bangladesh/src/features/tourGuide/components/serviceCard.component.js"],"names":["React","useState","useEffect","moneyIcon","timerIcon","CardDetails","IconTextContainer","CardParent","Row","Subtitle","Title","ImagePreview","ImagePreviewContainer","SpacingSmall","Icon","IpRoute","user_id","keyid","ServiceCard","serviceCardInfo","service","setService","loadPage","setloadPage","submitData","fetch","method","headers","body","JSON","stringify","userId","then","res","json","data","Alert","alert","console","log","length","price","catch","err","tripTitle","experience","photos","cost","map","i","area","route","year_of_experience","uri"],"mappings":"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","sourcesContent":["/** @format */\r\n\r\nimport React, {useState,useEffect} from \"react\";\r\nimport moneyIcon from \"../../../../assets/icons/money.png\";\r\nimport timerIcon from \"../../../../assets/icons/timer.png\";\r\n\r\nimport { CardDetails } from \"../../../components/roomCard.style\";\r\nimport {\r\n  IconTextContainer,\r\n  CardParent,\r\n  Row,\r\n  Subtitle,\r\n  Title,\r\n  ImagePreview,\r\n  ImagePreviewContainer,\r\n  SpacingSmall,\r\n  Icon,\r\n} from \"../../../components/common.style\";\r\nimport { IpRoute } from \"../../../components/environmentVeriables\";\r\nimport { user_id } from \"../../authentication/screens/logIn.screen\";\r\n\r\n\r\nvar keyid=0;\r\n//var x=0;\r\nexport const ServiceCard = ({ serviceCardInfo = {} }) => {\r\n\r\n  const[service,setService]= React.useState([{}]);\r\n  const[loadPage,setloadPage]= useState(true);\r\n  \r\n  const submitData = () => {\r\n    fetch(IpRoute+\"/getService\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        userId: user_id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        //console.log(res.status())\r\n        if (data == \"wrong credential\") {\r\n          Alert.alert(data);\r\n        } else {\r\n          setService(data);\r\n\r\n          console.log(data);\r\n          console.log(service.length)\r\n          console.log(\"price \",data[0].price);\r\n          if(data[0].price==null){\r\n            setloadPage(false);\r\n          };\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        //Alert.alert(err)\r\n      });\r\n  };\r\n \r\n  useEffect(()=>{\r\n    submitData();\r\n   \r\n  },[])\r\n  \r\n  const {\r\n    tripTitle = \"Sylhet - Ratargul\",\r\n    experience = \"5 years\",\r\n    photos = [\r\n      \"https://www.travelmate.com.bd/wp-content/uploads/2019/07/Ratargul-2.jpg\",\r\n    ],\r\n    cost = \"650 BDT\",\r\n  } = serviceCardInfo;\r\n\r\n  return (\r\n    <>\r\n    {loadPage\r\n\r\n    \r\n    ?<> \r\n    { service.map(i =>(\r\n\r\n    <CardParent elevation={5}>\r\n      <Row>\r\n        <CardDetails>\r\n          <Title key={keyid++}>{i.area}-{i.route}</Title>\r\n          <SpacingSmall />\r\n          <IconTextContainer>\r\n            <Icon source={timerIcon} />\r\n            <Subtitle>{i.year_of_experience} Years</Subtitle>\r\n          </IconTextContainer>\r\n          <IconTextContainer>\r\n            <Icon source={moneyIcon} />\r\n            <Subtitle>{i.price} BDT</Subtitle>\r\n          </IconTextContainer>\r\n        </CardDetails>\r\n        <ImagePreviewContainer>\r\n          <ImagePreview source={{ uri: photos[0] }} />\r\n        </ImagePreviewContainer>\r\n      </Row>\r\n    </CardParent>\r\n    ))}\r\n    </>\r\n    :<></>\r\n}\r\n    </>\r\n  );\r\n};\r\n\r\n//npm install @expo-google-fonts/roboto-slab\r\n"]},"metadata":{},"sourceType":"module"}