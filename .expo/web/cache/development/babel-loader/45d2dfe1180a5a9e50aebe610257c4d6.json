{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { IpRoute } from \"../../../components/environmentVeriables\";\nimport { PrimaryButton, SpacingLarge, TextInputTheme, H1, SafeAreaViewContainer } from \"../../../components/common.style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var SignupTravellerScreen = function SignupTravellerScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      contactno = _React$useState4[0],\n      setContactno = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      email = _React$useState6[0],\n      setEmail = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      password = _React$useState8[0],\n      setPassword = _React$useState8[1];\n\n  var onPressSignUp = function onPressSignUp() {\n    setName('');\n    setPassword('');\n    setContactno('');\n    setEmail('');\n\n    if (name == \"\" || contactno == \"\" || email == \"\" || password == \"\") {\n      Alert.alert(\"Fill all fields\");\n    } else {\n      submitData();\n    }\n  };\n\n  var submitData = function submitData() {\n    fetch(IpRoute + \"/signup\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        password: password,\n        contactNo: contactno,\n        userType: \"Traveller\"\n      })\n    }).then(function (res) {\n      return res.status;\n    }).then(function (data) {\n      if (data == 200) {\n        console.log(data);\n        navigation.navigate(\"LogInScreen\");\n        Alert.alert(\"successfully signed in !\");\n      } else Alert.alert(\"Email already exists !\");\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  return _jsx(SafeAreaViewContainer, {\n    children: _jsxs(ScrollView, {\n      children: [_jsx(H1, {\n        children: \"Sign up\"\n      }), _jsx(SpacingLarge, {}), _jsx(TextInputTheme, {\n        label: \"Name\",\n        onChangeText: setName,\n        value: name\n      }), _jsx(TextInputTheme, {\n        label: \"E-mail\",\n        onChangeText: setEmail,\n        value: email\n      }), _jsx(TextInputTheme, {\n        label: \"Phone No.\",\n        onChangeText: setContactno,\n        value: contactno\n      }), _jsx(TextInputTheme, {\n        label: \"Password\",\n        onChangeText: setPassword,\n        value: password\n      }), _jsx(SpacingLarge, {}), _jsx(PrimaryButton, {\n        icon: \"login\",\n        onPress: onPressSignUp,\n        children: \"Signup\"\n      }), _jsx(SpacingLarge, {})]\n    })\n  });\n};","map":{"version":3,"sources":["E:/Development/Walk_Through_Bangladesh/src/features/authentication/screens/signup.traveller.screen.js"],"names":["React","IpRoute","PrimaryButton","SpacingLarge","TextInputTheme","H1","SafeAreaViewContainer","SignupTravellerScreen","navigation","useState","name","setName","contactno","setContactno","email","setEmail","password","setPassword","onPressSignUp","Alert","alert","submitData","fetch","method","headers","body","JSON","stringify","contactNo","userType","then","res","status","data","console","log","navigate","catch","err"],"mappings":"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","sourcesContent":["/** @format */\r\n\r\nimport React from \"react\";\r\nimport { ScrollView, Alert } from \"react-native\";\r\nimport {IpRoute} from \"../../../components/environmentVeriables\";\r\nimport {\r\n  PrimaryButton,\r\n  SpacingLarge,\r\n  TextInputTheme,\r\n  H1,\r\n  SafeAreaViewContainer,\r\n} from \"../../../components/common.style\";\r\n\r\nexport const SignupTravellerScreen = ({navigation}) => {\r\n  \r\n  const [name, setName] = React.useState(\"\");\r\n  const [contactno, setContactno] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n\r\n  const onPressSignUp = () => {\r\n   setName('');\r\n   setPassword('');\r\n   setContactno('');\r\n   setEmail('');\r\n    if (\r\n      name == \"\" ||\r\n      contactno == \"\" ||\r\n      email == \"\" ||\r\n      password == \"\" \r\n    ) {\r\n      Alert.alert(\"Fill all fields\");\r\n    } else {\r\n      submitData();\r\n    }\r\n  };\r\n  \r\n  const submitData = () => {\r\n    fetch(IpRoute+\"/signup\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n        contactNo: contactno,\r\n        userType: \"Traveller\",\r\n      }),\r\n    })\r\n      .then((res) => res.status)\r\n      .then((data) => {\r\n        //console.log(res.status())\r\n        if (data == 200) {\r\n          console.log(data);\r\n          navigation.navigate(\"LogInScreen\");\r\n          Alert.alert(\"successfully signed in !\");\r\n        } else Alert.alert(\"Email already exists !\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        //Alert.alert(err)\r\n      });\r\n  };\r\n  \r\n  return (\r\n  <SafeAreaViewContainer>\r\n    <ScrollView>\r\n      <H1>Sign up</H1>\r\n\r\n      <SpacingLarge></SpacingLarge>\r\n\r\n      <TextInputTheme \r\n      label=\"Name\"\r\n      onChangeText={setName}\r\n      value={name}\r\n      ></TextInputTheme>\r\n      <TextInputTheme \r\n      label=\"E-mail\"\r\n      onChangeText={setEmail}\r\n      value={email}\r\n      ></TextInputTheme>\r\n      <TextInputTheme \r\n      label=\"Phone No.\"\r\n      onChangeText={setContactno}\r\n      value={contactno}\r\n      ></TextInputTheme>\r\n      <TextInputTheme \r\n      label=\"Password\"\r\n      onChangeText={setPassword}\r\n      value={password}\r\n      ></TextInputTheme>\r\n\r\n      <SpacingLarge></SpacingLarge>\r\n\r\n      <PrimaryButton icon=\"login\" onPress={onPressSignUp}>\r\n        Signup\r\n      </PrimaryButton>\r\n      <SpacingLarge></SpacingLarge>\r\n    </ScrollView>\r\n  </SafeAreaViewContainer>\r\n);\r\n};\r\n\r\n//3.03\r\n"]},"metadata":{},"sourceType":"module"}